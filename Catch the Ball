
function mousePressed(){
	if(layar == 0){
        layar = 1
        level.setLevel(1);
        mapp.init();
    }else if(layar == 2){
        layar = 0
        score = 0;
        level.setLevel(1);
    }
}

class Entity{
    constructor(x, y, width, height, s){
        this.x = x;
        this.y = y;
        this.width = width;
        this.height = height;
        this.s = s;
    }

    attack(){ 
    }

    moveRight(){
        if(this.x < 570){    
          this.x += this.s;
        }
    }
    
    moveLeft(){
        if(this.x > 0){
          this.x -= this.s;
        }
    }
    
    moveDown(){
        if(this.y < 575){
          this.y += this.s;
        }
    }

    moveUp(){ 
        if(this.y > 0){
          this.y -= this.s;
        }
    }
}

class Hero extends Entity{ 
    constructor(x, y, width, height, s){
        super(x, y, width, height, s);
        this.life = 15; 
    }

    show(){ 
        fill('#ff0');
        rect(this.x, this.y, this.width, this.height);
        noFill();
    }

    increaseScore(){ 
        score++;
    }
}

class Monster extends Entity{ 
    constructor(x, y, width, height, s){
        super(x, y, width, height, s);
        this.color = (random(0,255),random(0,255),random(0,255)); 
        this.life = 0;
        this.effect = 0;
    }

    increseSpeed(){
      this.s++;
    }

    show(){ 
      fill(this.color); 
      ellipse(this.x, this.y, this.width, this.height); 
      this.y += this.s;
    }
}

class Map{ 
    constructor(width, height){
        this.width = width;
        this.height = height;
    }

    init(){ 
        createCanvas(this.width, this.height)
    }
}

class Level{ 
    constructor(currentLevel, latestLevel, maxLevel){
        this.currentLevel = currentLevel;
        this.latestLevel = latestLevel;
        this.maxLevel = maxLevel;
    }

    setLevel(level){ 
        this.currentLevel = level; 
    }

    getCurrentLevel(){ 
        return this.currentLevel;
    }

    levelIncreaseLevel(){ 
        this.currentLevel++;
    }

}
